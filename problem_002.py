# Noah Badner, 2024
#
# Even Fibonacci Numbers
# Problem 2
#
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the
# first 10 terms will be:
#   1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
# even-valued terms.
#
# Completed: 2021-09-03
# Solution: 4613732

def even_fibonacci_sum(n):
    """Returns the sum of all even numbers in the Fibonacci sequence at or below the given upper bound n"""
    even_fib_sum = 0
    term_1, term_2 = 1, 2
    while term_2 <= n:
        even_fib_sum += term_2 if term_2 % 2 == 0 else 0
        term_1, term_2 = term_2, term_1 + term_2
    return even_fib_sum

def main():
    """Main method"""
    solution = even_fibonacci_sum(4000000)
    print(solution)


if __name__ == "__main__":
    main()
